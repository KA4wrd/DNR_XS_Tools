# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2024-01-25 17:10:04
"""
import arcpy
from sys import argv

def CleanCWIData(cons_cwi_table, Output_GDB, drop_pipe_cwi_table, X_Field, Y_Field):  # Clean CWI Data

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    arcpy.ImportToolbox(r"c:\program files\arcgis\pro\Resources\ArcToolbox\toolboxes\Data Management Tools.tbx")

    # Process: Copy (Copy) (management)
    cons_copy = fr"{arcpy.env.workspace}\cons_copy"
    arcpy.management.Copy(in_data=cons_cwi_table.__str__().format(**locals(),**globals()), out_data=cons_copy)

    # Process: Delete Field (Delete Field) (management)
    cons_copy_1_ = arcpy.management.DeleteField(in_table=cons_copy, drop_field=["diameter", "slot", "length", "material", "amount", "units", "OBJECTID", "Join_Count", "TARGET_FID", "JOIN_FID", "relateid_1", "unique_no", "wellname", "township", "range", "range_dir", "section", "subsection", "mgsquad_c", "elev_mc", "status_c", "use_c", "loc_mc", "loc_src", "data_src", "depth_drll", "depth_comp", "date_drll", "case_diam", "case_depth", "grout", "pollut_dst", "pollut_dir", "pollut_typ", "strat_date", "strat_upd", "strat_src", "strat_geol", "strat_mc", "depth2bdrk", "first_bdrk", "last_strat", "ohtopunit", "ohbotunit", "aquifer", "cuttings", "core", "bhgeophys", "geochem", "waterchem", "obwell", "swl", "dh_video", "input_src", "unused", "entry_date", "updt_date", "geoc_type", "gcm_code", "geoc_src", "geoc_prg", "utme", "utmn", "geoc_entry", "geoc_date", "geocupd_entry", "geocupd_date", "rcvd_date", "well_label", "wellid_1", "swlcount", "swldate", "swlavgmeas", "swlavgelev", "bdrkelev", "ohtopelev", "ohbotelev", "botholelev", "logurl", "straturl", "xsec_id", "BUFF_DIST", "ORIG_FID"])[0]

    # Process: Table Select (Table Select) (analysis)
    cons_cwi_clean = fr"{arcpy.env.workspace}\cons_cwi_clean"
    arcpy.analysis.TableSelect(in_table=cons_copy_1_, out_table=cons_cwi_clean, where_clause="constype = 'C' Or constype = 'S'")

    # Process: Add Fields (multiple) (Add Fields (multiple)) (management)
    cons_cwi_TableSelect_4_ = arcpy.management.AddFields(in_table=cons_cwi_clean, field_description=[["elev_top", "FLOAT", "", "", "", ""], ["elev_bot", "FLOAT", "", "", "", ""]])[0]

    # Process: Calculate Null depth_from fields for Casing (Calculate Field) (management)
    cons_cwi_TableSelect_3_ = arcpy.management.CalculateField(in_table=cons_cwi_TableSelect_4_, field="from_depth", expression="0 if !constype! is 'C' and !from_depth! is None else !from_depth!")[0]

    # Process: Calculate Fields (multiple) (Calculate Fields (multiple)) (management)
    cons_cwi_TableSelect_5_ = arcpy.management.CalculateFields(in_table=cons_cwi_TableSelect_3_, expression_type="PYTHON3", fields=[["elev_top", "!elevation! - !from_depth!", ""], ["elev_bot", "!elevation! - !to_depth!", ""]])[0]

    # Process: XY Table To Point (XY Table To Point) (management)
    dpl_cwi = fr"{arcpy.env.workspace}\dpl_cwi"
    arcpy.management.XYTableToPoint(in_table=drop_pipe_cwi_table.__str__().format(**locals(),**globals()), out_feature_class=dpl_cwi, x_field=X_Field.__str__().format(**locals(),**globals()), y_field=Y_Field.__str__().format(**locals(),**globals()), coordinate_system="GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]];-400 -400 1000000000;-100000 10000;-100000 10000;8.98315284119521E-09;0.001;0.001;IsHighPrecision")

if __name__ == '__main__':
    # Global Environment settings
    with arcpy.EnvManager(scratchWorkspace="C:\\Users\\Keforwar\\Documents\\ArcGIS\\XS_Tool_Template_Testing\\XS_Tool_Template_Testing.gdb", workspace="C:\\Users\\Keforwar\\Documents\\ArcGIS\\XS_Tool_Template_Testing\\XS_Tool_Template_Testing.gdb"):
        CleanCWIData(*argv[1:])
